// SPDX-License-Identifier: MIT

async function main() {
    const accounts = await web3.eth.getAccounts();
    const deployer = accounts[0];

    console.log("Deploying contracts with account:", deployer);

    
    const TestToken_ABI = [ [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_owner",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "Executed",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "gasUsed",
				"type": "uint256"
			}
		],
		"name": "GasUsed",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "dest",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "func",
				"type": "bytes"
			}
		],
		"name": "execute",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "dests",
				"type": "address[]"
			},
			{
				"internalType": "bytes[]",
				"name": "funcs",
				"type": "bytes[]"
			}
		],
		"name": "executeBatch",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
] ];
    const TestToken_Bytecode = "608060405234801561000f575f5ffd5b50604051610dc1380380610dc1833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b610cb58061010c5f395ff3fe608060405260043610610037575f3560e01c806318dfb3c7146100425780638da5cb5b1461006a578063b61d27f6146100945761003e565b3661003e57005b5f5ffd5b34801561004d575f5ffd5b506100686004803603810190610063919061062a565b6100bc565b005b348015610075575f5ffd5b5061007e61037e565b60405161008b91906106e7565b60405180910390f35b34801561009f575f5ffd5b506100ba60048036038101906100b591906107b2565b6103a2565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061087d565b60405180910390fd5b818190508484905014610192576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610189906108e5565b60405180910390fd5b5f5a90505f5f90505b8585905081101561032f575f8686838181106101ba576101b9610903565b5b90506020020160208101906101cf9190610930565b73ffffffffffffffffffffffffffffffffffffffff168585848181106101f8576101f7610903565b5b905060200281019061020a9190610967565b604051610218929190610a05565b5f604051808303815f865af19150503d805f8114610251576040519150601f19603f3d011682016040523d82523d5f602084013e610256565b606091505b505090508061029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610a67565b60405180910390fd5b7fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8787848181106102ce576102cd610903565b5b90506020020160208101906102e39190610930565b5f8787868181106102f7576102f6610903565b5b90506020028101906103099190610967565b6040516103199493929190610b13565b60405180910390a150808060010191505061019b565b505f5a8261033d9190610b7e565b90507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e58160405161036e9190610bc0565b60405180910390a1505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104279061087d565b60405180910390fd5b5f5a90505f8573ffffffffffffffffffffffffffffffffffffffff1685858560405161045d929190610a05565b5f6040518083038185875af1925050503d805f8114610497576040519150601f19603f3d011682016040523d82523d5f602084013e61049c565b606091505b50509050806104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610c23565b60405180910390fd5b5f5a836104ed9190610b7e565b90507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e58160405161051e9190610bc0565b60405180910390a17fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8787878760405161055b9493929190610c41565b60405180910390a150505050505050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261059557610594610574565b5b8235905067ffffffffffffffff8111156105b2576105b1610578565b5b6020830191508360208202830111156105ce576105cd61057c565b5b9250929050565b5f5f83601f8401126105ea576105e9610574565b5b8235905067ffffffffffffffff81111561060757610606610578565b5b6020830191508360208202830111156106235761062261057c565b5b9250929050565b5f5f5f5f604085870312156106425761064161056c565b5b5f85013567ffffffffffffffff81111561065f5761065e610570565b5b61066b87828801610580565b9450945050602085013567ffffffffffffffff81111561068e5761068d610570565b5b61069a878288016105d5565b925092505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106d1826106a8565b9050919050565b6106e1816106c7565b82525050565b5f6020820190506106fa5f8301846106d8565b92915050565b610709816106c7565b8114610713575f5ffd5b50565b5f8135905061072481610700565b92915050565b5f819050919050565b61073c8161072a565b8114610746575f5ffd5b50565b5f8135905061075781610733565b92915050565b5f5f83601f84011261077257610771610574565b5b8235905067ffffffffffffffff81111561078f5761078e610578565b5b6020830191508360018202830111156107ab576107aa61057c565b5b9250929050565b5f5f5f5f606085870312156107ca576107c961056c565b5b5f6107d787828801610716565b94505060206107e887828801610749565b935050604085013567ffffffffffffffff81111561080957610808610570565b5b6108158782880161075d565b925092505092959194509250565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610867600983610823565b915061087282610833565b602082019050919050565b5f6020820190508181035f8301526108948161085b565b9050919050565b7f4c656e677468206d69736d6174636800000000000000000000000000000000005f82015250565b5f6108cf600f83610823565b91506108da8261089b565b602082019050919050565b5f6020820190508181035f8301526108fc816108c3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082840312156109455761094461056c565b5b5f61095284828501610716565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f833560016020038436030381126109835761098261095b565b5b80840192508235915067ffffffffffffffff8211156109a5576109a461095f565b5b6020830192506001820236038313156109c1576109c0610963565b5b509250929050565b5f81905092915050565b828183375f83830152505050565b5f6109ec83856109c9565b93506109f98385846109d3565b82840190509392505050565b5f610a118284866109e1565b91508190509392505050565b7f4261746368207478206661696c656400000000000000000000000000000000005f82015250565b5f610a51600f83610823565b9150610a5c82610a1d565b602082019050919050565b5f6020820190508181035f830152610a7e81610a45565b9050919050565b5f819050919050565b5f819050919050565b5f610ab1610aac610aa784610a85565b610a8e565b61072a565b9050919050565b610ac181610a97565b82525050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f610af28385610ac7565b9350610aff8385846109d3565b610b0883610ad7565b840190509392505050565b5f606082019050610b265f8301876106d8565b610b336020830186610ab8565b8181036040830152610b46818486610ae7565b905095945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b888261072a565b9150610b938361072a565b9250828203905081811115610bab57610baa610b51565b5b92915050565b610bba8161072a565b82525050565b5f602082019050610bd35f830184610bb1565b92915050565b7f457865637574696f6e206661696c6564000000000000000000000000000000005f82015250565b5f610c0d601083610823565b9150610c1882610bd9565b602082019050919050565b5f6020820190508181035f830152610c3a81610c01565b9050919050565b5f606082019050610c545f8301876106d8565b610c616020830186610bb1565b8181036040830152610c74818486610ae7565b90509594505050505056fea2646970667358221220502b842ba083437ec5a892b65ea76af550e529854ef8f6740a64deec0216998d64736f6c634300081e0033"; // <-- BURAYA BYTECODE

    const TestTokenContract = new web3.eth.Contract(TestToken_ABI);
    const testToken = await TestTokenContract.deploy({
        data: TestToken_Bytecode,
        arguments: [web3.utils.toWei("10000", "ether")]
    }).send({ from: deployer, gas: 3000000 });

    console.log("TestToken deployed to:", testToken.options.address);

    const SimpleAccount_ABI = [ [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_owner",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "Executed",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "gasUsed",
				"type": "uint256"
			}
		],
		"name": "GasUsed",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "dest",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "func",
				"type": "bytes"
			}
		],
		"name": "execute",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "dests",
				"type": "address[]"
			},
			{
				"internalType": "bytes[]",
				"name": "funcs",
				"type": "bytes[]"
			}
		],
		"name": "executeBatch",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
]];
    const SimpleAccount_Bytecode = "608060405234801561000f575f5ffd5b50604051610dc1380380610dc1833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b610cb58061010c5f395ff3fe608060405260043610610037575f3560e01c806318dfb3c7146100425780638da5cb5b1461006a578063b61d27f6146100945761003e565b3661003e57005b5f5ffd5b34801561004d575f5ffd5b506100686004803603810190610063919061062a565b6100bc565b005b348015610075575f5ffd5b5061007e61037e565b60405161008b91906106e7565b60405180910390f35b34801561009f575f5ffd5b506100ba60048036038101906100b591906107b2565b6103a2565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061087d565b60405180910390fd5b818190508484905014610192576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610189906108e5565b60405180910390fd5b5f5a90505f5f90505b8585905081101561032f575f8686838181106101ba576101b9610903565b5b90506020020160208101906101cf9190610930565b73ffffffffffffffffffffffffffffffffffffffff168585848181106101f8576101f7610903565b5b905060200281019061020a9190610967565b604051610218929190610a05565b5f604051808303815f865af19150503d805f8114610251576040519150601f19603f3d011682016040523d82523d5f602084013e610256565b606091505b505090508061029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610a67565b60405180910390fd5b7fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8787848181106102ce576102cd610903565b5b90506020020160208101906102e39190610930565b5f8787868181106102f7576102f6610903565b5b90506020028101906103099190610967565b6040516103199493929190610b13565b60405180910390a150808060010191505061019b565b505f5a8261033d9190610b7e565b90507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e58160405161036e9190610bc0565b60405180910390a1505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104279061087d565b60405180910390fd5b5f5a90505f8573ffffffffffffffffffffffffffffffffffffffff1685858560405161045d929190610a05565b5f6040518083038185875af1925050503d805f8114610497576040519150601f19603f3d011682016040523d82523d5f602084013e61049c565b606091505b50509050806104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610c23565b60405180910390fd5b5f5a836104ed9190610b7e565b90507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e58160405161051e9190610bc0565b60405180910390a17fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8787878760405161055b9493929190610c41565b60405180910390a150505050505050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261059557610594610574565b5b8235905067ffffffffffffffff8111156105b2576105b1610578565b5b6020830191508360208202830111156105ce576105cd61057c565b5b9250929050565b5f5f83601f8401126105ea576105e9610574565b5b8235905067ffffffffffffffff81111561060757610606610578565b5b6020830191508360208202830111156106235761062261057c565b5b9250929050565b5f5f5f5f604085870312156106425761064161056c565b5b5f85013567ffffffffffffffff81111561065f5761065e610570565b5b61066b87828801610580565b9450945050602085013567ffffffffffffffff81111561068e5761068d610570565b5b61069a878288016105d5565b925092505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106d1826106a8565b9050919050565b6106e1816106c7565b82525050565b5f6020820190506106fa5f8301846106d8565b92915050565b610709816106c7565b8114610713575f5ffd5b50565b5f8135905061072481610700565b92915050565b5f819050919050565b61073c8161072a565b8114610746575f5ffd5b50565b5f8135905061075781610733565b92915050565b5f5f83601f84011261077257610771610574565b5b8235905067ffffffffffffffff81111561078f5761078e610578565b5b6020830191508360018202830111156107ab576107aa61057c565b5b9250929050565b5f5f5f5f606085870312156107ca576107c961056c565b5b5f6107d787828801610716565b94505060206107e887828801610749565b935050604085013567ffffffffffffffff81111561080957610808610570565b5b6108158782880161075d565b925092505092959194509250565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610867600983610823565b915061087282610833565b602082019050919050565b5f6020820190508181035f8301526108948161085b565b9050919050565b7f4c656e677468206d69736d6174636800000000000000000000000000000000005f82015250565b5f6108cf600f83610823565b91506108da8261089b565b602082019050919050565b5f6020820190508181035f8301526108fc816108c3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082840312156109455761094461056c565b5b5f61095284828501610716565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f833560016020038436030381126109835761098261095b565b5b80840192508235915067ffffffffffffffff8211156109a5576109a461095f565b5b6020830192506001820236038313156109c1576109c0610963565b5b509250929050565b5f81905092915050565b828183375f83830152505050565b5f6109ec83856109c9565b93506109f98385846109d3565b82840190509392505050565b5f610a118284866109e1565b91508190509392505050565b7f4261746368207478206661696c656400000000000000000000000000000000005f82015250565b5f610a51600f83610823565b9150610a5c82610a1d565b602082019050919050565b5f6020820190508181035f830152610a7e81610a45565b9050919050565b5f819050919050565b5f819050919050565b5f610ab1610aac610aa784610a85565b610a8e565b61072a565b9050919050565b610ac181610a97565b82525050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f610af28385610ac7565b9350610aff8385846109d3565b610b0883610ad7565b840190509392505050565b5f606082019050610b265f8301876106d8565b610b336020830186610ab8565b8181036040830152610b46818486610ae7565b905095945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b888261072a565b9150610b938361072a565b9250828203905081811115610bab57610baa610b51565b5b92915050565b610bba8161072a565b82525050565b5f602082019050610bd35f830184610bb1565b92915050565b7f457865637574696f6e206661696c6564000000000000000000000000000000005f82015250565b5f610c0d601083610823565b9150610c1882610bd9565b602082019050919050565b5f6020820190508181035f830152610c3a81610c01565b9050919050565b5f606082019050610c545f8301876106d8565b610c616020830186610bb1565b8181036040830152610c74818486610ae7565b90509594505050505056fea2646970667358221220502b842ba083437ec5a892b65ea76af550e529854ef8f6740a64deec0216998d64736f6c634300081e0033"; // <-- BURAYA BYTECODE

    const SimpleAccountContract = new web3.eth.Contract(SimpleAccount_ABI);
    const simpleAccount = await SimpleAccountContract.deploy({
        data: SimpleAccount_Bytecode,
        arguments: [deployer]
    }).send({ from: deployer, gas: 3000000 });

    console.log("SimpleAccount deployed to:", simpleAccount.options.address);

    const Paymaster_ABI = [ [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_owner",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "Executed",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "gasUsed",
				"type": "uint256"
			}
		],
		"name": "GasUsed",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "dest",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "func",
				"type": "bytes"
			}
		],
		"name": "execute",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "dests",
				"type": "address[]"
			},
			{
				"internalType": "bytes[]",
				"name": "funcs",
				"type": "bytes[]"
			}
		],
		"name": "executeBatch",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
] ];
    const Paymaster_Bytecode = "608060405234801561000f575f5ffd5b50604051610dc1380380610dc1833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b610cb58061010c5f395ff3fe608060405260043610610037575f3560e01c806318dfb3c7146100425780638da5cb5b1461006a578063b61d27f6146100945761003e565b3661003e57005b5f5ffd5b34801561004d575f5ffd5b506100686004803603810190610063919061062a565b6100bc565b005b348015610075575f5ffd5b5061007e61037e565b60405161008b91906106e7565b60405180910390f35b34801561009f575f5ffd5b506100ba60048036038101906100b591906107b2565b6103a2565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101419061087d565b60405180910390fd5b818190508484905014610192576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610189906108e5565b60405180910390fd5b5f5a90505f5f90505b8585905081101561032f575f8686838181106101ba576101b9610903565b5b90506020020160208101906101cf9190610930565b73ffffffffffffffffffffffffffffffffffffffff168585848181106101f8576101f7610903565b5b905060200281019061020a9190610967565b604051610218929190610a05565b5f604051808303815f865af19150503d805f8114610251576040519150601f19603f3d011682016040523d82523d5f602084013e610256565b606091505b505090508061029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610a67565b60405180910390fd5b7fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8787848181106102ce576102cd610903565b5b90506020020160208101906102e39190610930565b5f8787868181106102f7576102f6610903565b5b90506020028101906103099190610967565b6040516103199493929190610b13565b60405180910390a150808060010191505061019b565b505f5a8261033d9190610b7e565b90507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e58160405161036e9190610bc0565b60405180910390a1505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104279061087d565b60405180910390fd5b5f5a90505f8573ffffffffffffffffffffffffffffffffffffffff1685858560405161045d929190610a05565b5f6040518083038185875af1925050503d805f8114610497576040519150601f19603f3d011682016040523d82523d5f602084013e61049c565b606091505b50509050806104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610c23565b60405180910390fd5b5f5a836104ed9190610b7e565b90507f275c82ca4f491f0c9b7ffa4f6e3e85613c4a0d2c4f67b64995dc68806f0586e58160405161051e9190610bc0565b60405180910390a17fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8787878760405161055b9493929190610c41565b60405180910390a150505050505050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261059557610594610574565b5b8235905067ffffffffffffffff8111156105b2576105b1610578565b5b6020830191508360208202830111156105ce576105cd61057c565b5b9250929050565b5f5f83601f8401126105ea576105e9610574565b5b8235905067ffffffffffffffff81111561060757610606610578565b5b6020830191508360208202830111156106235761062261057c565b5b9250929050565b5f5f5f5f604085870312156106425761064161056c565b5b5f85013567ffffffffffffffff81111561065f5761065e610570565b5b61066b87828801610580565b9450945050602085013567ffffffffffffffff81111561068e5761068d610570565b5b61069a878288016105d5565b925092505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106d1826106a8565b9050919050565b6106e1816106c7565b82525050565b5f6020820190506106fa5f8301846106d8565b92915050565b610709816106c7565b8114610713575f5ffd5b50565b5f8135905061072481610700565b92915050565b5f819050919050565b61073c8161072a565b8114610746575f5ffd5b50565b5f8135905061075781610733565b92915050565b5f5f83601f84011261077257610771610574565b5b8235905067ffffffffffffffff81111561078f5761078e610578565b5b6020830191508360018202830111156107ab576107aa61057c565b5b9250929050565b5f5f5f5f606085870312156107ca576107c961056c565b5b5f6107d787828801610716565b94505060206107e887828801610749565b935050604085013567ffffffffffffffff81111561080957610808610570565b5b6108158782880161075d565b925092505092959194509250565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610867600983610823565b915061087282610833565b602082019050919050565b5f6020820190508181035f8301526108948161085b565b9050919050565b7f4c656e677468206d69736d6174636800000000000000000000000000000000005f82015250565b5f6108cf600f83610823565b91506108da8261089b565b602082019050919050565b5f6020820190508181035f8301526108fc816108c3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082840312156109455761094461056c565b5b5f61095284828501610716565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f833560016020038436030381126109835761098261095b565b5b80840192508235915067ffffffffffffffff8211156109a5576109a461095f565b5b6020830192506001820236038313156109c1576109c0610963565b5b509250929050565b5f81905092915050565b828183375f83830152505050565b5f6109ec83856109c9565b93506109f98385846109d3565b82840190509392505050565b5f610a118284866109e1565b91508190509392505050565b7f4261746368207478206661696c656400000000000000000000000000000000005f82015250565b5f610a51600f83610823565b9150610a5c82610a1d565b602082019050919050565b5f6020820190508181035f830152610a7e81610a45565b9050919050565b5f819050919050565b5f819050919050565b5f610ab1610aac610aa784610a85565b610a8e565b61072a565b9050919050565b610ac181610a97565b82525050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f610af28385610ac7565b9350610aff8385846109d3565b610b0883610ad7565b840190509392505050565b5f606082019050610b265f8301876106d8565b610b336020830186610ab8565b8181036040830152610b46818486610ae7565b905095945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b888261072a565b9150610b938361072a565b9250828203905081811115610bab57610baa610b51565b5b92915050565b610bba8161072a565b82525050565b5f602082019050610bd35f830184610bb1565b92915050565b7f457865637574696f6e206661696c6564000000000000000000000000000000005f82015250565b5f610c0d601083610823565b9150610c1882610bd9565b602082019050919050565b5f6020820190508181035f830152610c3a81610c01565b9050919050565b5f606082019050610c545f8301876106d8565b610c616020830186610bb1565b8181036040830152610c74818486610ae7565b90509594505050505056fea2646970667358221220502b842ba083437ec5a892b65ea76af550e529854ef8f6740a64deec0216998d64736f6c634300081e0033"; // <-- BURAYA BYTECODE

    const PaymasterContract = new web3.eth.Contract(Paymaster_ABI);
    const paymaster = await PaymasterContract.deploy({
        data: Paymaster_Bytecode,
        arguments: [deployer]
    }).send({ from: deployer, gas: 3000000 });

    console.log("Paymaster deployed to:", paymaster.options.address);

    
    await testToken.methods
        .transfer(simpleAccount.options.address, web3.utils.toWei("1000", "ether"))
        .send({ from: deployer });

    console.log("1000 token transferred to SimpleAccount");

   
    const receiver = "0xYourReceiverAddressHere";

    const encodedTransfer = testToken.methods
        .transfer(receiver, web3.utils.toWei("100", "ether"))
        .encodeABI();

    await simpleAccount.methods
        .execute(testToken.options.address, 0, encodedTransfer)
        .send({ from: deployer });

    console.log("Transfer executed from SimpleAccount to receiver");
}

main()
    .then(() => console.log("Script finished"))
    .catch((err) => console.error("Error:", err));
